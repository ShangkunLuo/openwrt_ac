#!/bin/sh /etc/rc.common
# Copyright (C) 2006 OpenWrt.org
START=65

USE_PROCD=1

EXTRA_COMMANDS="status"
EXTRA_HELP="        status Print the status of the service"
  
config_load()
{
	wifidog_enable=$(uci get wifidog.@wifidog[0].wifidog_enable 2>/dev/null)
	#uci set wifidog.@wifidog[0].gateway_id=`ifconfig | grep eth0 | cut -d ' ' -f11 2> /dev/null`
	uci set wifidog.@wifidog[0].gateway_id=`cat /sys/class/net/eth0/address | tr [a-z] [A-Z] 2> /dev/null`
	uci commit wifidog.@wifidog[0].gateway_id
    gateway_id=$(uci get wifidog.@wifidog[0].gateway_id 2>/dev/null)
    gateway_interface=$(uci get wifidog.@wifidog[0].gateway_interface 2>/dev/null) 
    gateway_eninterface=$(uci get wifidog.@wifidog[0].gateway_eninterface 2>/dev/null)
    gateway_hostname=$(uci get wifidog.@wifidog[0].gateway_hostname 2>/dev/null) 
    gateway_httpport=$(uci get wifidog.@wifidog[0].gateway_httpport 2>/dev/null) 
    gateway_path=$(uci get wifidog.@wifidog[0].gateway_path 2>/dev/null) 
    ssl_enable=$(uci get wifidog.@wifidog[0].ssl_enable 2>/dev/null) 
    gateway_connmax=$(uci get wifidog.@wifidog[0].gateway_connmax 2>/dev/null)     
	check_interval=$(uci get wifidog.@wifidog[0].check_interval 2>/dev/null)
	client_timeout=$(uci get wifidog.@wifidog[0].client_timeout 2>/dev/null)

echo "
GatewayID $gateway_id
GatewayInterface $gateway_interface
ExternalInterface $gateway_eninterface
AuthServer {
	Hostname $gateway_hostname
	HTTPPort $gateway_httpport
	Path $gateway_path
	}

CheckInterval $check_interval
ClientTimeout $client_timeout
HTTPDMaxConn $gateway_connmax

FirewallRuleSet validating-users {
    FirewallRule allow to 0.0.0.0/0
}

FirewallRuleSet known-users {
    FirewallRule allow to 0.0.0.0/0
}

FirewallRuleSet unknown-users {
    FirewallRule allow udp port 53
    FirewallRule allow tcp port 53
    FirewallRule allow udp port 67
    FirewallRule allow tcp port 67
}

FirewallRuleSet locked-users {
    FirewallRule block to 0.0.0.0/0
}
" > /etc/wifidog.conf

        gateway_hostname2=$(uci get wifidog.@wifidog[0].gateway_hostname2 2>/dev/null) 
        gateway_httpport2=$(uci get wifidog.@wifidog[0].gateway_httpport2 2>/dev/null) 
        gateway_path2=$(uci get wifidog.@wifidog[0].gateway_path2 2>/dev/null) 
        ssl_enable2=$(uci get wifidog.@wifidog[0].ssl_enable2 2>/dev/null) 
        if [ "$gateway_hostname2" != "" ]; then
echo "
AuthServer {
	Hostname $gateway_hostname2
	SSLAvailable $ssl_enable2
	HTTPPort $gateway_httpport2
	Path $gateway_path2
}
" >> /etc/wifidog.conf	
fi
}

start_service() {
    config_load
    if [ "1" = "$wifidog_enable" ] ;then 
        procd_open_instance
        # -s: log to syslog
        # -f: run in foreground
        procd_set_param command /usr/bin/wifidog -s -f
        procd_set_param respawn # respawn automatically if something died
        procd_set_param file /etc/wifidog.conf
        procd_close_instance
    fi
}

status() {
    /usr/bin/wdctl status
}

stop() {
    service_stop /usr/bin/wifidog
}
